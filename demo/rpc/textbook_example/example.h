/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _EXAMPLE_H_RPCGEN
#define _EXAMPLE_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif

#define MAX 1000

typedef int FileIdentifier;

typedef int FilePointer;

typedef int Length;

struct Data {
	int length;
	char buffer[MAX];
};
typedef struct Data Data;

struct writeargs {
	FileIdentifier f;
	FilePointer position;
	Data data;
};
typedef struct writeargs writeargs;

struct readargs {
	FileIdentifier f;
	FilePointer position;
	Length length;
};
typedef struct readargs readargs;

#define FILEREADWRITE 9999
#define VERSION 2

#if defined(__STDC__) || defined(__cplusplus)
#define WRITE 1
extern  void * write_2(writeargs *, CLIENT *);
extern  void * write_2_svc(writeargs *, struct svc_req *);
#define READ 2
extern  Data * read_2(readargs *, CLIENT *);
extern  Data * read_2_svc(readargs *, struct svc_req *);
extern int filereadwrite_2_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define WRITE 1
extern  void * write_2();
extern  void * write_2_svc();
#define READ 2
extern  Data * read_2();
extern  Data * read_2_svc();
extern int filereadwrite_2_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_FileIdentifier (XDR *, FileIdentifier*);
extern  bool_t xdr_FilePointer (XDR *, FilePointer*);
extern  bool_t xdr_Length (XDR *, Length*);
extern  bool_t xdr_Data (XDR *, Data*);
extern  bool_t xdr_writeargs (XDR *, writeargs*);
extern  bool_t xdr_readargs (XDR *, readargs*);

#else /* K&R C */
extern bool_t xdr_FileIdentifier ();
extern bool_t xdr_FilePointer ();
extern bool_t xdr_Length ();
extern bool_t xdr_Data ();
extern bool_t xdr_writeargs ();
extern bool_t xdr_readargs ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_EXAMPLE_H_RPCGEN */
